[{"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\index.js":"1","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\App.js":"2","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\PrivateRoute.js":"3","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\PublicRoute.js":"4","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\caver.js":"5","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Cover\\index.js":"6","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\index.js":"7","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Cover\\Cover.js":"8","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Home.js":"9","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\LoginForm.js":"10","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Navigation.js":"11","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Intro\\index.js":"12","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Matching\\index.js":"13","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\index.js":"14","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Setting\\index.js":"15","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Toggle.js":"16","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Setting\\SettingContainer.js":"17","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Matching\\Matching.js":"18","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Intro\\Intro.js":"19","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\PartyContainer.js":"20","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\PartyPresenter.js":"21","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Wrapper.js":"22","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Loader.js":"23","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Message.js":"24"},{"size":169,"mtime":1606932405319,"results":"25","hashOfConfig":"26"},{"size":1208,"mtime":1606932405118,"results":"27","hashOfConfig":"26"},{"size":455,"mtime":1606932405217,"results":"28","hashOfConfig":"26"},{"size":458,"mtime":1606932405220,"results":"29","hashOfConfig":"26"},{"size":177,"mtime":1606932405049,"results":"30","hashOfConfig":"26"},{"size":53,"mtime":1606932404912,"results":"31","hashOfConfig":"26"},{"size":50,"mtime":1606932404996,"results":"32","hashOfConfig":"26"},{"size":3069,"mtime":1606932404834,"results":"33","hashOfConfig":"26"},{"size":708,"mtime":1606932404915,"results":"34","hashOfConfig":"26"},{"size":8511,"mtime":1606932405186,"results":"35","hashOfConfig":"26"},{"size":3030,"mtime":1606932405211,"results":"36","hashOfConfig":"26"},{"size":53,"mtime":1606932404929,"results":"37","hashOfConfig":"26"},{"size":62,"mtime":1606932404936,"results":"38","hashOfConfig":"26"},{"size":80,"mtime":1606932404949,"results":"39","hashOfConfig":"26"},{"size":86,"mtime":1606932404983,"results":"40","hashOfConfig":"26"},{"size":1199,"mtime":1606932405269,"results":"41","hashOfConfig":"26"},{"size":3170,"mtime":1606932404952,"results":"42","hashOfConfig":"26"},{"size":6430,"mtime":1606932404934,"results":"43","hashOfConfig":"26"},{"size":1160,"mtime":1606932404925,"results":"44","hashOfConfig":"26"},{"size":17637,"mtime":1606932404944,"results":"45","hashOfConfig":"26"},{"size":3987,"mtime":1606932404947,"results":"46","hashOfConfig":"26"},{"size":552,"mtime":1606932405280,"results":"47","hashOfConfig":"26"},{"size":132,"mtime":1606932405165,"results":"48","hashOfConfig":"26"},{"size":557,"mtime":1606932405200,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jukn56",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\index.js",[],["102","103"],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\App.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\PrivateRoute.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\PublicRoute.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\caver.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Cover\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Cover\\Cover.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Home.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\LoginForm.js",["104"],"import React, { Fragment } from \"react\";\r\nimport cx from 'classnames'\r\nimport caver from 'caver'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*\r\n** 로그인 폼에서 키스토어 파일과 비밀번호를 읽거나,\r\n** 비밀키를 받는다.\r\n** 로그인 성공 검증까지 하고, 성공하면, Reducer에 Action을 호출한다\r\n*/\r\n/**\r\n * Auth component manages authentication.\r\n * It provides two different access method.\r\n * 1) By keystore(json file) + password\r\n * 2) By privatekey\r\n */\r\nclass LoginForm extends React.Component {\r\n    constructor() {\r\n      super()\r\n      this.state = {\r\n        accessType: 'keystore', // || 'privateKey'\r\n        keystore: '',\r\n        keystoreMsg: '',\r\n        password: '',\r\n        privateKey: '',\r\n      }\r\n    }\r\n  \r\n    handleChange = (e) => {\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n      })\r\n    }\r\n  \r\n    /**\r\n     * reset method reset states to intial state.\r\n     */\r\n    reset = () => {\r\n      this.setState({\r\n        keystore: '',\r\n        privateKey: '',\r\n        password: '',\r\n        keystoreMsg: ''\r\n      })\r\n    }\r\n  \r\n    /**\r\n     * handleImport method takes a file, read\r\n     */\r\n    handleImport = (e) => {\r\n      const keystore = e.target.files[0]\r\n      // 'FileReader' is used for reading contents of file.\r\n      // We would use 'onload' handler and 'readAsText' method.\r\n      // * FileReader.onload\r\n      // - This event is triggered each time the reading operation is completed.\r\n      // * FileReader.readAsText()\r\n      // - Starts reading the contents.\r\n      const fileReader = new FileReader()\r\n      fileReader.onload = (e) => {\r\n        try {\r\n          if (!this.checkValidKeystore(e.target.result)) {\r\n            // If key store file is invalid, show message \"Invalid keystore file.\"\r\n            this.setState({ keystoreMsg: 'Invalid keystore file.' })\r\n            return\r\n          }\r\n          // If key store file is valid,\r\n          // 1) set e.target.result keystore\r\n          // 2) show message \"It is valid keystore. input your password.\"\r\n          this.setState({\r\n            keystore: e.target.result,\r\n            keystoreMsg: 'It is valid keystore. input your password.',\r\n            keystoreName: keystore.name,\r\n          }, () => document.querySelector('#input-password').focus())\r\n        } catch (e) {\r\n          this.setState({ keystoreMsg: 'Invalid keystore file.' })\r\n          return\r\n        }\r\n      }\r\n      fileReader.readAsText(keystore)\r\n    }\r\n  \r\n    checkValidKeystore = (keystore) => {\r\n      // e.target.result is popultaed by keystore contents.\r\n      // Since keystore contents is JSON string, we should parse it to use.\r\n      const parsedKeystore = JSON.parse(keystore)\r\n  \r\n      // Valid key store has 'version', 'id', 'address', 'crypto' properties.\r\n      const isValidKeystore = parsedKeystore.version &&\r\n        parsedKeystore.id &&\r\n        parsedKeystore.address &&\r\n        parsedKeystore.crypto\r\n  \r\n      return isValidKeystore\r\n    }\r\n  \r\n    /**\r\n     * handleLogin method\r\n     */\r\n    handleLogin = () => {\r\n      const { accessType, keystore, password, privateKey } = this.state\r\n  \r\n      // Access type2: access thorugh private key\r\n      if (accessType === 'privateKey') {\r\n        this.integrateWallet(privateKey)\r\n        return\r\n      }\r\n  \r\n      // Access type1: access through keystore + password\r\n      try {\r\n        const { privateKey: privateKeyFromKeystore } = caver.klay.accounts.decrypt(keystore, password)\r\n        this.integrateWallet(privateKeyFromKeystore)\r\n      } catch (e) {\r\n        this.setState({ keystoreMsg: `Password doesn't match.` })\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * getWallet method get wallet instance from caver.\r\n     */\r\n    getWallet = () => {\r\n      if (caver.klay.accounts.wallet.length) {\r\n        return caver.klay.accounts.wallet[0]\r\n      }\r\n    }\r\n  \r\n    /**\r\n     * integrateWallet method integrate wallet instance to caver.\r\n     * In detail, this method works like the step below:\r\n     * 1) it takes private key as an input argument.\r\n     * 2) get wallet instance through caver with private key.\r\n     * 3) set wallet instance to session storage for storing wallet instance\r\n     * cf) session storage stores item until tab is closed.\r\n     */\r\n    integrateWallet = (privateKey) => {\r\n      const walletInstance = caver.klay.accounts.privateKeyToAccount(privateKey)\r\n      caver.klay.accounts.wallet.add(walletInstance)\r\n      sessionStorage.setItem('walletInstance', JSON.stringify(walletInstance))\r\n      this.reset()\r\n    }\r\n  \r\n    /**\r\n     * removeWallet method removes\r\n     * 1) wallet instance from caver.klay.accounts\r\n     * 2) 'walletInstance' value from session storage.\r\n     */\r\n    removeWallet = () => {\r\n      caver.klay.accounts.wallet.clear()\r\n      sessionStorage.removeItem('walletInstance')\r\n      this.reset()\r\n    }\r\n  \r\n    /**\r\n     * toggleAccessType method toggles access type\r\n     * 1) By keystore.\r\n     * 2) By private key.\r\n     * After toggling access type, reset current state to intial state.\r\n     */\r\n    toggleAccessType = () => {\r\n      const { accessType } = this.state\r\n      this.setState({\r\n        accessType: accessType === 'privateKey' ? 'keystore' : 'privateKey'\r\n      }, this.reset)\r\n    }\r\n  \r\n    renderAuth = () => {\r\n      const { keystore, keystoreMsg, keystoreName, accessType } = this.state\r\n      const walletInstance = this.getWallet()\r\n      // 'walletInstance' exists means that wallet is already integrated.\r\n      if (walletInstance) {\r\n        return (\r\n          <Fragment>\r\n            <label className=\"Auth__label\">Integrated: </label>\r\n            <p className=\"Auth__address\">{walletInstance.address}</p>\r\n            <button className=\"Auth__logout\" onClick={this.removeWallet}>Logout</button>\r\n          </Fragment>\r\n        )\r\n      }\r\n  \r\n      return (\r\n        <Fragment>\r\n          {accessType === 'keystore'\r\n            // View 1: Access by keystore + password.\r\n            ? (\r\n              <Fragment>\r\n                <div className=\"Auth__keystore\">\r\n                  <p className=\"Auth__label\" htmlFor=\"keystore\">Keystore file:</p>\r\n                  <label className=\"Auth__button\" htmlFor=\"keystore\">Upload: </label>\r\n                  <input\r\n                    className=\"Auth__file\"\r\n                    id=\"keystore\"\r\n                    type=\"file\"\r\n                    onChange={this.handleImport}\r\n                    accept=\".json\"\r\n                  />\r\n                  <p\r\n                    className=\"Auth__fileName\">\r\n                    {keystoreName || 'No keystore file...'}\r\n                  </p>\r\n                </div>\r\n                <label className=\"Auth__label\" htmlFor=\"password\">Password:</label>\r\n                <input\r\n                  id=\"input-password\"\r\n                  className=\"Auth__passwordInput\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Fragment>\r\n            )\r\n            // View 2: Access by private key.\r\n            : (\r\n              <Fragment>\r\n                <label className=\"Auth__label\">Private Key:</label>\r\n                <input\r\n                  className=\"Auth__input\"\r\n                  name=\"privateKey\"\r\n                  onChange={this.handleChange}\r\n                  autocomplete=\"off\"\r\n                />\r\n              </Fragment>\r\n            )\r\n          }\r\n          <Link to=\"/home\" className=\"login__button\" onClick={this.handleLogin}>로그인</Link>\r\n          {/* <button className=\"Auth__button\" onClick={this.handleLogin}>Login</button> */}\r\n          <p className=\"Auth__keystoreMsg\">{keystoreMsg}</p>\r\n          <p className=\"Auth__toggleAccessButton\" onClick={this.toggleAccessType}>\r\n            {accessType === 'privateKey'\r\n              ? 'Keystore 파일로 로그인하시겠어요? (click)'\r\n              : 'Privatekey로 로그인하시겠어요? (click)'\r\n            }\r\n          </p>\r\n        </Fragment>\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      const { keystore } = this.state\r\n      return (\r\n        <div className={cx('Auth', {\r\n          // If keystore file is imported, Adds a 'Auth--active' classname.\r\n          'Auth--active': !!keystore,\r\n        })}\r\n        >\r\n          <div className=\"Auth__flag\" />\r\n          <div className=\"Auth__content\">\r\n            {this.renderAuth()}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default LoginForm;","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Navigation.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Intro\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Matching\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Setting\\index.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Toggle.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Setting\\SettingContainer.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Matching\\Matching.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Intro\\Intro.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\PartyContainer.js",["105","106","107"],"import React from 'react';\r\nimport PartyPresenter from './PartyPresenter';\r\nimport caver from 'caver';\r\nimport DEPLOYED_ABI from 'deployedABI.json';\r\nimport DEPLOYED_ADDRESS from 'deployedAddress.json';\r\nimport styled from 'styled-components';\r\nimport Message from 'Components/Message';\r\nimport Loader from 'Components/Loader';\r\nimport Modal from 'react-awesome-modal';\r\nimport logo from \"Images/logo.png\";\r\nimport closeButton from \"Images/closeButton.png\";\r\n\r\nconst PresenterWrapper = styled.div`\r\n\ttext-align: center;\r\n`;\r\n\r\nconst BottomButton = styled.button`\r\nfont-size: 20px;\r\n\tpadding: 15px 50px;\r\n\tmargin: 25px 0 0 0;\r\n\tborder: 0px;\r\n\tcolor: #FFFFFF;\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tfont-weight: bold;\r\n\tborder-radius: 10px;\r\n\tbackground-color: #000000;\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tfont-size: 20px;\r\n\tpadding: 15px 45px;\r\n\tmargin: 10px 20px;\r\n\tbackground-color: #FF166B;\r\n\tborder: 0px;\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tfont-weight: bold;\r\n\tdisplay: block;\r\n\tborder-radius: 10px;\r\n`;\r\n\r\nconst CenterButton = styled.button`\r\n\tfont-size: 20px;\r\n\tpadding: 15px 45px;\r\n\tmargin: 10px auto;\r\n\tbackground-color: #FF166B;\r\n\tborder: 0px;\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tfont-weight: bold;\r\n\tdisplay: block;\r\n\tborder-radius: 10px;\r\n`;\r\n\r\nconst OwnerContent = styled.div`\r\n\t\r\n`;\r\n\r\nconst ButtonList = styled.div`\r\n\tdisplay: flex;\r\n\theight: 400px;\r\n\tjustify-content: center;\r\n\talign-items: flex-end;\r\n`;\r\n\r\nconst Identity = styled.div`\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tbackground-color: #FFFFFF;\r\n\tfont-size: 25px;\r\n\tborder-radius: 10px;\r\n\tmargin: 0 40px 0 40px;\r\n\tpadding: 15px;\r\n\tposition: relative;\r\n\ttop: 40px;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst Notion = styled.span`\r\n\tfont-size: 20px;\r\n\tpadding: 15px 45px;\r\n\tmargin: 10px 20px;\r\n\tfont-weight: bold;\r\n\tdisplay: block;\r\n`;\r\n\r\nconst Title = styled.span`\r\n\tfont-size: 20px;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst FlexWrapper = styled.div`\r\n\tmargin: 0 5px;\r\n\tpadding: 30px;\r\n\tborder-radius: 25px;\r\n\tbackground-color: #FAFAFA;\r\n\tborder: 0px;\r\n    box-shadow: 1px 3px 2px gray;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n\tmargin: 0 5px;\r\n\tpadding: 30px;\r\n\twidth: 230px;\r\n\tborder-radius: 25px;\r\n\tbackground-color: #FAFAFA;\r\n\tborder: 0px;\r\n    box-shadow: 1px 3px 2px gray;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tpadding: 50px 0 0 0;\r\n`;\r\n\r\nconst VoteContent = styled.div`\r\n\tmargin: 0 5px;\r\n\tpadding: 30px;\r\n\tborder-radius: 25px;\r\n\tbackground-color: #FAFAFA;\r\n\tborder: 0px;\r\n    box-shadow: 1px 3px 2px gray;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst VoteWrapper = styled.div`\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tmargin: ${props => props.margin};\r\n\tcolor: rgb(100, 100, 100, 50%);\r\n\tfont-size: 20px;\r\n\tpadding: 10px 15px;\r\n\tborder-radius: 5px;\r\n\tborder: 0px;\r\n\tbackground-color: #F4F5F7;\r\n`;\r\n\r\n/*modal*/\r\nconst ModalContainer = styled.div`\r\n\tdisplay: grid;\r\n    grid-template-rows: 3;\r\n`\r\n\r\nconst ModalHeader = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nconst ModalLogo = styled.img`\r\n\twidth: 250px;\r\n    height: 250px;\r\n    padding-left: 50px;\r\n`;\r\n\r\nconst ModalCloseButton = styled.img`\r\n\tposition: relative;\r\n    top: 35px;\r\n    left: 400px;\r\n    width: 35px;\r\n    height: 35px;\r\n`;\r\n\r\nconst ModalHeaderH2 = styled.h2`\r\n\tposition: relative;\r\n    top: 202px;\r\n    left: 93px;\r\n    margin: 0;\r\n    font-size: 20px;\r\n`;    \r\n\r\nconst ModalInput = styled.div`\r\n\tposition: relative;\r\n    display: grid;\r\n    grid-template-rows: 2;\r\n    width: 500px;\r\n    padding: 0 250px;\r\n`;\r\n\r\nconst ModalReason = styled.div`\r\n\tdisplay: flex;\r\n    padding-bottom: 15px;\r\n    align-items: center;\r\n`;\r\n\r\nconst ModalInputLabel = styled.label`\r\n\tfont-weight: 600;\r\n    font-size: 20px;\r\n    flex: 1;\r\n    text-align: left;\r\n`;\r\n\r\nconst ModalInputReason = styled.input`\r\n\tbackground-color: #F4F5F7;\r\n    width: 280px;\r\n    height: 48px;\r\n    border: none;\r\n    outline-style: none;\r\n`;\r\n\r\nconst CreateVote = styled.div`\r\n\tposition: relative;\r\n    width: 200px;\r\n    height: 65px;\r\n    text-align: center;\r\n    left: 400px;\r\n    /* background-color: #FF166B; */\r\n    border-radius: 10px;\r\n    font-weight: 600;\r\n    font-size: 18px;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CreateVoteButton = styled.button`\r\n\tbackground-color: #FF166B;\r\n    border: none;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n    line-height: 28px;\r\n    text-decoration: none;\r\n    padding: 20px;\r\n    color: black;\r\n    cursor: pointer;\r\n    width: 200px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Owner = ({error, isOwner, getPartyOut}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t파티장{isOwner ? ' (나)' : null}\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isOwner ? \r\n\t\t\t\t\t\t<Button onClick={getPartyOut}>\r\n\t\t\t\t\t\t\t파티 해체\r\n\t\t\t\t\t\t</Button> : null}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst Me = ({error, user, getPartyOut, startTime}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t나\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t{user.curr}\r\n\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t{user.curr === '매칭 검증' && startTime.getTime() === 0 ? \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t<Button onClick={getPartyOut}>\r\n\t\t\t\t\t\t\t\t\t매칭 취소\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst User = ({num, error, user}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t파티원{num}\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t{user.curr}\r\n\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nclass PartyContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.shareContract = DEPLOYED_ABI\r\n\t\t\t&& DEPLOYED_ADDRESS\r\n\t\t\t&& new caver.klay.Contract(DEPLOYED_ABI, DEPLOYED_ADDRESS.address);\r\n\t\tthis.walletAddress = caver.klay.accounts.wallet.length ? caver.klay.accounts.wallet[0].address : 0 ;\r\n\t\tthis.state = {\r\n\t\t\tisValid: false,\r\n\t\t\tisOwner: false,\r\n\t\t\tisBreak: false,\r\n\t\t\tisFinish: false,\r\n\t\t\tstartTime: null,\r\n\t\t\tendTime: null,\r\n\t\t\tpeople: 0,\r\n\t\t\tvotePeople: 0,\r\n\t\t\tcons: 0,\r\n\t\t\treason: '',\r\n\t\t\tisVoted: false,\r\n\t\t\tloading: true,\r\n\t\t\terror: null,\r\n\t\t\tisPartyPage: true,\r\n\t\t\tisModalVisible: false\r\n\t\t};\r\n\t\tthis.getPartyOut = this.getPartyOut.bind(this);\r\n\t\tthis.startParty = this.startParty.bind(this);\r\n\t\tthis.openVotePage = this.openVotePage.bind(this);\r\n\t\tthis._openModal = this._openModal.bind(this);\r\n\t\tthis._closeModal = this._closeModal.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.createVote = this.createVote.bind(this);\r\n\t\tthis.votingYes = this.votingYes.bind(this);\r\n\t\tthis.votingNo = this.votingNo.bind(this);\r\n\t\tthis.withdrawBreakParty = this.withdrawBreakParty.bind(this);\r\n\t\tthis.breakUpParty = this.breakUpParty.bind(this);\r\n\t\tthis.withdraw = this.withdraw.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\ttry {\r\n\t\t\tconst party = await this.shareContract.methods.getPartyInfo().call({ from: this.walletAddress });\r\n\t\t\tconst isValid = party[0] !== \"0\" ? true : false;\r\n\t\t\tconst startTime = new Date(parseInt(party[3]) * 1000);\r\n\t\t\tconst endTime = new Date(parseInt(party[4]) * 1000);\r\n\t\t\tconst now = new Date();\r\n\t\t\tif (startTime.getTime() !== 0 && endTime < now) { // 파티원: 파티가 종료된 경우\r\n\t\t\t\tthis.setState({ isFinish: true });\r\n\t\t\t} else\r\n\t\t\t\tthis.setState({ isFinish: false });\r\n\t\t\tthis.setState({ isValid: isValid, isOwner: party[1], isBreak: party[2], startTime: startTime,\r\n\t\t\t\tendTime: endTime, people: parseInt(party[5]), votePeople: parseInt(party[6]),\r\n\t\t\t\tcons: parseInt(party[7]), reason: party[8], isVoted: party[9] });\r\n\t\t} catch {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"클레이튼 노드와 통신중에 에러가 발생했어요.\"\r\n\t\t\t});\r\n\t\t} finally {\r\n\t\t\tthis.setState({ loading:false });\r\n\t\t}\r\n\t}\r\n\r\n\topenVotePage() {\r\n\t\tthis.setState({ isPartyPage:false });\r\n\t}\r\n\r\n\t_openModal() {\r\n\t\tthis.setState({ isModalVisible: true });\r\n\t}\r\n\r\n\t_closeModal() {\r\n\t\tthis.setState({ isModalVisible: false });\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] : e.target.value,\r\n\t\t})\r\n\t}\r\n\t\r\n\tasync startParty() {\r\n\t\tif (this.state.isOwner) {\r\n\t\t\ttry {\r\n\t\t\t\tawait this.shareContract.methods.startParty().send({ from: this.walletAddress, gas: '200000'});\r\n\t\t\t} catch {\r\n\t\t\t\talert(\"파티를 시작하지 못했어요😥\");\r\n\t\t\t} finally {\r\n\t\t\t\talert(\"파티가 시작되었어요.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert(\"방장만 파티를 시작할 수 있어요.\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync getPartyOut() {\r\n\t\ttry {\r\n\t\t\talert(\"들어올때는 마음대로지만 나갈때는 아니에요.\");\r\n\t\t} catch {\r\n\t\t\talert(\"실패했어요.\");\r\n\t\t} finally {\r\n\t\t\tconsole.log(\"getOut 끝\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync createVote() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.createVote(this.state.reason).send({ from: this.walletAddress, gas: '200000' });\r\n\t\t\talert(\"투표를 시작했어요.\");\r\n\t\t} catch {\r\n\t\t\talert(\"투표를 시작하지 못했어요.\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync votingYes() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.voting(true).send({ from: this.walletAddress, gas: '200000' });\r\n\t\t\tthis.setState({ votePeople: this.state.votePeople + 1 });\r\n\t\t\talert(\"투표했어요.\");\r\n\t\t} catch {\r\n\t\t\talert(\"문제가 생겨서 투표하지 못했어요😥\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync votingNo() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.voting(false).send({ from: this.walletAddress, gas: '200000' });\r\n\t\t\tthis.setState({ votePeople: this.state.votePeople + 1, cons: this.state.cons + 1 });\r\n\t\t\talert(\"투표했어요.\");\r\n\t\t} catch {\r\n\t\t\talert(\"문제가 생겨서 투표하지 못했어요😥\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync withdrawBreakParty() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.withdrawBreakParty().send({ from: this.walletAddress, gas: '200000' });\r\n\t\t\talert(\"송금이 완료되었습니다.\");\r\n\t\t} catch {\r\n\t\t\talert(\"문제가 생겨서 송금하지 못했어요😥\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync breakUpParty() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.breakUpParty().send({ from: this.walletAddress, gas: '200000' });\r\n\t\t\talert(\"환불이 완료되었습니다.\");\r\n\t\t} catch {\r\n\t\t\talert(\"문제가 생겨서 환불하지 못했어요😥\")\r\n\t\t}\r\n\t}\r\n\r\n\tasync withdraw() {\r\n\t\ttry {\r\n\t\t\tawait this.shareContract.methods.withdraw().send({ from: this.walletAddress, gas: '200000'});\r\n\t\t\talert(\"송금이 완료되었습니다.\");\r\n\t\t} catch {\r\n\t\t\talert(\"문제가 생겨서 인출하지 못했어요😥\");\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tisValid,\r\n\t\t\tisOwner,\r\n\t\t\tisBreak,\r\n\t\t\tisFinish,\r\n\t\t\tstartTime,\r\n\t\t\tendTime,\r\n\t\t\tpeople,\r\n\t\t\tvotePeople,\r\n\t\t\tcons,\r\n\t\t\treason,\r\n\t\t\tisVoted,\r\n\t\t\tloading,\r\n\t\t\terror,\r\n\t\t\tisPartyPage,\r\n\t\t\tisModalVisible\r\n\t\t} = this.state;\r\n\t\tconst me = {curr: \"매칭 검증\"};\r\n\r\n\t\tconst participants = [];\r\n\t\tif (isOwner) {\r\n\t\t\tfor (let i = 1; i < people; i++) {\r\n\t\t\t\tparticipants.push({curr: \"매칭 검증\"});\r\n\t\t\t}\r\n\t\t\tfor (let i = people; i < 4; i++) {\r\n\t\t\t\tparticipants.push({curr: \"매칭중...\"});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 2; i < people; i++) {\r\n\t\t\t\tparticipants.push({curr: \"매칭 검증\"});\r\n\t\t\t}\r\n\t\t\tfor (let i = people; i < 4; i++) {\r\n\t\t\t\tparticipants.push({curr: \"매칭중...\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\tloading ?\r\n\t\t\t\t<Loader /> :\r\n\t\t\t\t(\r\n\t\t\t\t\tisPartyPage ?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tisValid ? (\r\n\t\t\t\t\t\t\tisBreak ? (\r\n\t\t\t\t\t\t\t\t<PresenterWrapper>\r\n\t\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t\t<FlexWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tisOwner ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t투표 결과에 의해 파티가 폭파되었습니다. 아래 버튼을 눌러 송금받으세요.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={this.withdrawBreakParty} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t송금하기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t투표 결과에 의해 파티가 폭파되었습니다. 아래 버튼을 눌러 환불을 받으세요.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={this.breakUpParty}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t환불받기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</FlexWrapper>\r\n\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t</PresenterWrapper>\r\n\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\tisFinish ? (\r\n\t\t\t\t\t\t\t\t\t<PresenterWrapper>\r\n\t\t\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexWrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisOwner ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t한달이 지났어요. 아래 버튼을 눌러 송금받으세요.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={this.withdraw}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t송금하기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t한달이 지났어요. 새로운 파티를 찾아볼까요 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexWrapper>\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t</PresenterWrapper>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<PresenterWrapper>\r\n\t\t\t\t\t\t\t\t\t\t<Title>\r\n\t\t\t\t\t\t\t\t\t\t\t공지사항\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tstartTime.getTime() !== 0 ? <div>파티가 {(startTime.getMonth() + 1) + \"월 \" + startTime.getDate() + \"일\"}에 시작되어 {(endTime.getMonth() + 1) + \"월 \" + endTime.getDate() + \"일\"}에 끝나요.</div> : null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tvotePeople !== 0 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvotePeople !== 4 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>투표가 진행중이에요 !</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: <div>투표가 종료되었어요 ! 반대가 많아 폭파되지 않았어요</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t\t\t<Owner error={error} isOwner={isOwner} getPartyOut={this.getPartyOut}/>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tisOwner === false ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Me error={error} user={me} getPartyOut={this.getPartyOut} startTime={startTime} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t<User num={1} error={error} user={participants[0]}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<User num={2} error={error} user={participants[1]}/>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tisOwner === true ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<User num={3} error={error} user={participants[2]}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t// 파티가 시작했으면 투표버튼 활성화\r\n\t\t\t\t\t\t\t\t\t\t\tstartTime.getTime() !== 0 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BottomButton onClick={this.openVotePage}>투표현황</BottomButton> :\r\n\t\t\t\t\t\t\t\t\t\t\t\tpeople === 4 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<BottomButton onClick={this.startParty}>파티 시작</BottomButton> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</PresenterWrapper>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<PresenterWrapper>\r\n\t\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t\t<FlexWrapper>\r\n\t\t\t\t\t\t\t\t\t\t참가중인 파티가 없어요.\r\n\t\t\t\t\t\t\t\t\t</FlexWrapper>\r\n\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t</PresenterWrapper>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t<PresenterWrapper>\r\n\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t{ votePeople !== 0 ? (\r\n\t\t\t\t\t\t\t\t\t<VoteWrapper>\r\n\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t현재 투표\r\n\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t<VoteContent>\r\n\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t투표 현황: {votePeople}명 참가\r\n\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t투표 사유: {reason}\r\n\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t반대 인원: {cons}명\r\n\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tisVoted ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvotePeople === 4 && cons >= 2 ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={() => { alert(\"재투표는 현재 버전에서 불가능해요. 신중하게 했어야죠😝\"); }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t투표 다시 만들기\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t투표를 이미 진행했어요\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={this.votingYes}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t찬성 투표\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CenterButton onClick={this.votingNo}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t반대 투표\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CenterButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</VoteContent>\r\n\t\t\t\t\t\t\t\t\t</VoteWrapper>\r\n\t\t\t\t\t\t\t\t\t) : <VoteWrapper>\r\n\t\t\t\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t\t\t\t<Wrapper>\r\n\t\t\t\t\t\t\t\t\t\t\t\t진행중인 투표가 없어요.\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this._openModal()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t투표 만들기\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Modal className=\"account-modal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={isModalVisible}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"1000\" height=\"500\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teffect=\"fadeInUp\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClickAway = {() => this._closeModal()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalLogo src={logo} alt=\"로그인 폼의 로고 이미지\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalHeaderH2>투표 이유 입력</ModalHeaderH2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalCloseButton src={closeButton} onClick={()=>this._closeModal()} alt=\"닫기 버튼\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalInput>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalReason>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalInputLabel>투표 사유 </ModalInputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ModalInputReason type=\"text\" name=\"reason\" onChange={this.handleChange}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ModalReason>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ModalInput>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CreateVote>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CreateVoteButton onClick={this.createVote}>투표 시작</CreateVoteButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CreateVote>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ModalContainer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\t\t\t\t\t</Wrapper>\r\n\t\t\t\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t\t\t</VoteWrapper>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t</PresenterWrapper>\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PartyContainer;","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Routes\\Home\\Party\\PartyPresenter.js",["108"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'Components/Loader';\r\nimport styled from 'styled-components';\r\nimport Message from 'Components/Message';\r\n\r\nconst PresenterWrapper = styled.div`\r\n\ttext-align: center;\r\n`;\r\n\r\nconst BottomButton = styled.button`\r\nfont-size: 20px;\r\n\tpadding: 15px 50px;\r\n\tmargin: 25px 0 0 0;\r\n\tborder: 0px;\r\n\tcolor: #FFFFFF;\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tfont-weight: bold;\r\n\tborder-radius: 10px;\r\n\tbackground-color: #000000;\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tfont-size: 20px;\r\n\tpadding: 15px 45px;\r\n\tmargin: 10px 20px;\r\n\tbackground-color: #FF166B;\r\n\tborder: 0px;\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tfont-weight: bold;\r\n\tdisplay: block;\r\n\tborder-radius: 10px;\r\n`;\r\n\r\nconst OwnerContent = styled.div`\r\n\t\r\n`;\r\n\r\nconst ButtonList = styled.div`\r\n\tdisplay: flex;\r\n\theight: 450px;\r\n\tjustify-content: center;\r\n\talign-items: flex-end;\r\n`;\r\n\r\nconst Identity = styled.div`\r\n\tbox-shadow: 1px 3px 2px gray;\r\n\tbackground-color: #FFFFFF;\r\n\tfont-size: 25px;\r\n\tborder-radius: 10px;\r\n\tmargin: 0 40px 0 40px;\r\n\tpadding: 15px;\r\n\tposition: relative;\r\n\ttop: 40px;\r\n\tfont-weight: bold;\r\n`;\r\n\r\nconst Notion = styled.span`\r\n\tfont-size: 20px;\r\n\tpadding: 15px 45px;\r\n\tmargin: 10px 20px;\r\n\tfont-weight: bold;\r\n\tdisplay: block;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n\tmargin: 0 5px;\r\n\tpadding: 30px;\r\n\twidth: 230px;\r\n\tborder-radius: 25px;\r\n\tbackground-color: #FAFAFA;\r\n\tborder: 0px;\r\n    box-shadow: 1px 3px 2px gray;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tpadding: 50px 0 0 0;\r\n`;\r\n\r\nconst Owner = ({error, isOwner}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t파티장{isOwner ? ' (나)' : null}\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{isOwner ? \r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t파티 해체\r\n\t\t\t\t\t\t</Button> : null}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst Me = ({error, user, getPartyOut}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t나\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t\t{user.curr}\r\n\t\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t\t\t{user.curr === '매칭 검증' ? \r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t<Button onClick={getPartyOut}>\r\n\t\t\t\t\t\t\t\t\t매칭 취소\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst User = ({num, error, user}) => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t{error ? (<Message text={error} color=\"red\" />) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Identity>\r\n\t\t\t\t\t\t파티원{num}\r\n\t\t\t\t\t</Identity>\r\n\t\t\t\t\t<ButtonList>\r\n\t\t\t\t\t\t<Notion>\r\n\t\t\t\t\t\t\t{user.curr}\r\n\t\t\t\t\t\t</Notion>\r\n\t\t\t\t\t</ButtonList>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst PartyPresenter = ({isOwner, me, participants, startTime, people, vote, cons, loading, error, createVote }) => (\r\n\tloading ? <Loader /> : (\r\n\t\t<PresenterWrapper>\r\n\t\t\t<Container>\r\n\t\t\t\t<Owner error={error} isOwner={isOwner}/>\r\n\t\t\t\t{\r\n\t\t\t\t\tisOwner === false ?\r\n\t\t\t\t\t\t<Me error={error} user={me} getPartyOut={this.getPartyOut} />\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<User num={1} error={error} user={participants[0]}/>\r\n\t\t\t\t<User num={2} error={error} user={participants[1]}/>\r\n\t\t\t\t{\r\n\t\t\t\t\tisOwner === true ?\r\n\t\t\t\t\t\t<User num={3} error={error} user={participants[2]}/>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</Container>\r\n\t\t\t{\r\n\t\t\t\t// 파티가 시작했으면 투표버튼 활성화\r\n\t\t\t\tstartTime !== 0 ?\r\n\t\t\t\t\t<BottomButton onClick={this.createVote}>투표제기</BottomButton> :\r\n\t\t\t\t\tpeople === 4 ?\r\n\t\t\t\t\t\t<BottomButton onClick={this.startParty}>파티 시작</BottomButton> :\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t</PresenterWrapper>\r\n\t)\r\n)\r\n\r\nPartyPresenter.propTypes = {\r\n\tisOwner: PropTypes.bool.isRequired,\r\n\tstartTime: PropTypes.string.isRequired,\r\n\tpeople: PropTypes.string.isRequired,\r\n\tvote: PropTypes.string.isRequired,\r\n\tcons: PropTypes.string.isRequired,\r\n\tloading: PropTypes.bool\r\n}\r\n\r\nexport default PartyPresenter;","C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Wrapper.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Loader.js",[],"C:\\Users\\seyeo\\OneDrive\\바탕 화면\\project\\Skkrypto_6th_Team_B_Project\\front-end\\src\\Components\\Message.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":166,"column":15,"nodeType":"115","messageId":"116","endLine":166,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":22},{"ruleId":"113","severity":1,"message":"118","line":53,"column":7,"nodeType":"115","messageId":"116","endLine":53,"endColumn":19},{"ruleId":"113","severity":1,"message":"119","line":130,"column":7,"nodeType":"115","messageId":"116","endLine":130,"endColumn":12},{"ruleId":"113","severity":1,"message":"118","line":35,"column":7,"nodeType":"115","messageId":"116","endLine":35,"endColumn":19},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'keystore' is assigned a value but never used.","Identifier","unusedVar","'PartyPresenter' is defined but never used.","'OwnerContent' is assigned a value but never used.","'Input' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]